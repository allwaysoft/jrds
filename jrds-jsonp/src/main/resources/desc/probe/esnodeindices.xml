<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE probedesc PUBLIC "-//jrds//DTD Probe Description//EN"
    "urn:jrds:probedesc">
<probedesc>
    <name>ElasticNodeIndices</name>
    <probeName>elasticnode_indices${attr.nodename}</probeName>
    <probeClass>jrds.jsonp.probe.HttpJson</probeClass>
    <customattr name="nodename" />
    <specific name="upTimePath">$.nodes.*.jvm.uptime_in_millis</specific>
    <uptimefactor>0.001</uptimefactor>
    <defaultargs>
        <attr name="port">9200</attr>
        <attr name="file">/_nodes/_local/stats/indices,jvm,process,thread_pool</attr>
    </defaultargs>
    <!-- docs -->
    <ds>
        <dsName>indices.docs.count</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.indices.docs.count</collect>
    </ds>
    <ds>
        <dsName>indices.docs.deleted</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.indices.docs.deleted</collect>
    </ds>
    <!-- store -->
    <ds>
        <dsName>indices.store.size_in_bytes</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.indices.store.size_in_bytes</collect>
    </ds>
    <!-- Indexing -->
    <ds>
        <dsName>indices.indexing.index_total</dsName>
        <dsType>counter</dsType>
        <collect>$.nodes.*.indices.indexing.index_total</collect>
    </ds>
    <ds>
        <dsName>indices.indexing.index_time_in_millis</dsName>
        <dsType>counter</dsType>
        <collect>$.nodes.*.indices.indexing.index_time_in_millis</collect>
    </ds>
    <ds>
        <dsName>indices.indexing.index_current</dsName>
        <dsType>counter</dsType>
        <collect>$.nodes.*.indices.indexing.index_current</collect>
    </ds>
    <ds>
        <dsName>indices.indexing.index_failed</dsName>
        <dsType>counter</dsType>
        <collect>$.nodes.*.indices.indexing.index_failed</collect>
    </ds>
    <ds>
        <dsName>indices.indexing.delete_total</dsName>
        <dsType>counter</dsType>
        <collect>$.nodes.*.indices.indexing.delete_total</collect>
    </ds>
    <ds>
        <dsName>indices.indexing.delete_time_in_millis</dsName>
        <dsType>counter</dsType>
        <collect>$.nodes.*.indices.indexing.delete_time_in_millis</collect>
    </ds>
    <ds>
        <dsName>indices.indexing.delete_current</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.indices.indexing.delete_current</collect>
    </ds>
    <ds>
        <dsName>indices.indexing.noop_update_total</dsName>
        <dsType>counter</dsType>
        <collect>$.nodes.*.indices.indexing.noop_update_total</collect>
    </ds>
    <ds>
        <dsName>indices.indexing.is_throttled</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.indices.indexing.is_throttled</collect>
    </ds>
    <ds>
        <dsName>indices.indexing.throttle_time_in_millis</dsName>
        <dsType>counter</dsType>
        <collect>$.nodes.*.indices.indexing.throttle_time_in_millis</collect>
    </ds>
    <!-- get -->
    <ds>
        <dsName>indices.get.total</dsName>
        <dsType>counter</dsType>
        <collect>$.nodes.*.indices.get.total</collect>
    </ds>
    <ds>
        <dsName>indices.get.time_in_millis</dsName>
        <dsType>counter</dsType>
        <collect>$.nodes.*.indices.get.time_in_millis</collect>
    </ds>
    <ds>
        <dsName>indices.get.exists_total</dsName>
        <dsType>counter</dsType>
        <collect>$.nodes.*.indices.get.exists_total</collect>
    </ds>
    <ds>
        <dsName>indices.get.exists_time_in_millis</dsName>
        <dsType>counter</dsType>
        <collect>$.nodes.*.indices.get.exists_time_in_millis</collect>
    </ds>
    <ds>
        <dsName>indices.get.missing_total</dsName>
        <dsType>counter</dsType>
        <collect>$.nodes.*.indices.get.missing_total</collect>
    </ds>
    <ds>
        <dsName>indices.get.missing_time_in_millis</dsName>
        <dsType>counter</dsType>
        <collect>$.nodes.*.indices.get.missing_time_in_millis</collect>
    </ds>
    <ds>
        <dsName>indices.get.current</dsName>
        <dsType>counter</dsType>
        <collect>$.nodes.*.indices.get.current</collect>
    </ds>
    <!-- search -->
    <ds>
        <dsName>indices.search.open_contexts</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.indices.search.open_contexts</collect>
    </ds>
    <ds>
        <dsName>indices.search.query_total</dsName>
        <dsType>counter</dsType>
        <collect>$.nodes.*.indices.search.query_total</collect>
    </ds>
    <ds>
        <dsName>indices.search.query_time_in_millis</dsName>
        <dsType>counter</dsType>
        <collect>$.nodes.*.indices.search.query_time_in_millis</collect>
    </ds>
    <ds>
        <dsName>indices.search.query_current</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.indices.search.query_current</collect>
    </ds>
    <ds>
        <dsName>indices.search.fetch_total</dsName>
        <dsType>counter</dsType>
        <collect>$.nodes.*.indices.search.fetch_total</collect>
    </ds>
    <ds>
        <dsName>indices.search.fetch_time_in_millis</dsName>
        <dsType>counter</dsType>
        <collect>$.nodes.*.indices.search.fetch_time_in_millis</collect>
    </ds>
    <ds>
        <dsName>indices.search.fetch_current</dsName>
        <dsType>counter</dsType>
        <collect>$.nodes.*.indices.search.fetch_current</collect>
    </ds>
    <ds>
        <dsName>indices.search.scroll_total</dsName>
        <dsType>counter</dsType>
        <collect>$.nodes.*.indices.search.scroll_total</collect>
    </ds>
    <ds>
        <dsName>indices.search.scroll_time_in_millis</dsName>
        <dsType>counter</dsType>
        <collect>$.nodes.*.indices.search.scroll_time_in_millis</collect>
    </ds>
    <ds>
        <dsName>indices.search.scroll_current</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.indices.search.scroll_current</collect>
    </ds>
    <ds>
        <dsName>indices.search.suggest_total</dsName>
        <dsType>counter</dsType>
        <collect>$.nodes.*.indices.search.suggest_total</collect>
    </ds>
    <ds>
        <dsName>indices.search.suggest_time_in_millis</dsName>
        <dsType>counter</dsType>
        <collect>$.nodes.*.indices.search.suggest_time_in_millis</collect>
    </ds>
    <ds>
        <dsName>indices.search.suggest_current</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.indices.search.suggest_current</collect>
    </ds>
    <!-- merge -->
    <ds>
        <dsName>indices.merges.current_size_in_bytes</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.indices.merges.current_size_in_bytes</collect>
    </ds>
    <ds>
        <dsName>indices.merges.total_size_in_bytes</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.indices.merges.total_size_in_bytes</collect>
    </ds>
    <ds>
        <dsName>indices.merges.total_auto_throttle_in_bytes</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.indices.merges.total_auto_throttle_in_bytes</collect>
    </ds>
    <!-- query_cache -->
    <ds>
        <dsName>indices.query_cache.memory_size_in_bytes</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.indices.query_cache.memory_size_in_bytes</collect>
    </ds>
    <!-- fielddata -->
    <ds>
        <dsName>indices.fielddata.memory_size_in_bytes</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.indices.fielddata.memory_size_in_bytes</collect>
    </ds>
    <!-- segments -->
    <ds>
        <dsName>indices.segments.memory_in_bytes</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.indices.segments.memory_in_bytes</collect>
    </ds>
    <ds>
        <dsName>indices.segments.terms_memory_in_bytes</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.indices.segments.terms_memory_in_bytes</collect>
    </ds>
    <ds>
        <dsName>indices.segments.stored_fields_memory_in_bytes</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.indices.segments.stored_fields_memory_in_bytes</collect>
    </ds>
    <ds>
        <dsName>indices.segments.term_vectors_memory_in_bytes</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.indices.segments.term_vectors_memory_in_bytes</collect>
    </ds>
    <ds>
        <dsName>indices.segments.norms_memory_in_bytes</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.indices.segments.norms_memory_in_bytes</collect>
    </ds>
    <ds>
        <dsName>indices.segments.points_memory_in_bytes</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.indices.segments.points_memory_in_bytes</collect>
    </ds>
    <ds>
        <dsName>indices.segments.doc_values_memory_in_bytes</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.indices.segments.doc_values_memory_in_bytes</collect>
    </ds>
    <ds>
        <dsName>indices.segments.index_writer_memory_in_bytes</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.indices.segments.index_writer_memory_in_bytes</collect>
    </ds>
    <ds>
        <dsName>indices.segments.version_map_memory_in_bytes</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.indices.segments.version_map_memory_in_bytes</collect>
    </ds>
    <ds>
        <dsName>indices.segments.fixed_bit_set_memory_in_bytes</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.indices.segments.fixed_bit_set_memory_in_bytes</collect>
    </ds>
    <!-- query_cache -->
    <ds>
        <dsName>indices.request_cache.memory_size_in_bytes</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.indices.request_cache.memory_size_in_bytes</collect>
    </ds>
    <!-- translog -->
    <ds>
        <dsName>indices.translog.operations</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.indices.translog.operations</collect>
    </ds>
    <ds>
        <dsName>indices.translog.size_in_bytes</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.indices.translog.size_in_bytes</collect>
    </ds>
    <ds>
        <dsName>indices.translog.uncommitted_operations</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.indices.translog.uncommitted_operations</collect>
    </ds>
    <ds>
        <dsName>indices.translog.uncommitted_size_in_bytes</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.indices.translog.uncommitted_size_in_bytes</collect>
    </ds>
    <ds>
        <dsName>indices.translog.earliest_last_modified_age</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.indices.translog.earliest_last_modified_age</collect>
    </ds>
    <!-- process -->
    <ds>
        <dsName>process.open_file_descriptors</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.process.open_file_descriptors</collect>
    </ds>
    <ds>
        <dsName>process.max_file_descriptors</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.process.max_file_descriptors</collect>
    </ds>
    <!-- Was generated using :
             escmd node -n XX stats -m thread_pool
             | jq '.[].thread_pool | paths(scalars) | join(".")'
             | sed 's/"//g' 
             | awk -F '.' '{printf(" <ds>\n <dsName>thread_pool.%s</dsName>\n        <dsType>gauge</dsType>\n <collect>$.nodes.*.thread_pool.%s..%s</collect>\n </ds>\n",$0, $1,$2)}' -->
    <ds>
        <dsName>thread_pool.analyze.active</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.thread_pool.analyze.active</collect>
    </ds>
    <ds>
        <dsName>thread_pool.analyze.completed</dsName>
        <dsType>counter</dsType>
        <collect>$.nodes.*.thread_pool.analyze.completed</collect>
    </ds>
    <ds>
        <dsName>thread_pool.analyze.largest</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.thread_pool.analyze.largest</collect>
    </ds>
    <ds>
        <dsName>thread_pool.analyze.queue</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.thread_pool.analyze.queue</collect>
    </ds>
    <ds>
        <dsName>thread_pool.analyze.rejected</dsName>
        <dsType>counter</dsType>
        <collect>$.nodes.*.thread_pool.analyze.rejected</collect>
    </ds>
    <ds>
        <dsName>thread_pool.analyze.threads</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.thread_pool.analyze.threads</collect>
    </ds>
    <ds>
        <dsName>thread_pool.ccr.active</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.thread_pool.ccr.active</collect>
    </ds>
    <ds>
        <dsName>thread_pool.ccr.completed</dsName>
        <dsType>counter</dsType>
        <collect>$.nodes.*.thread_pool.ccr.completed</collect>
    </ds>
    <ds>
        <dsName>thread_pool.ccr.largest</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.thread_pool.ccr.largest</collect>
    </ds>
    <ds>
        <dsName>thread_pool.ccr.queue</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.thread_pool.ccr.queue</collect>
    </ds>
    <ds>
        <dsName>thread_pool.ccr.rejected</dsName>
        <dsType>counter</dsType>
        <collect>$.nodes.*.thread_pool.ccr.rejected</collect>
    </ds>
    <ds>
        <dsName>thread_pool.ccr.threads</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.thread_pool.ccr.threads</collect>
    </ds>
    <ds>
        <dsName>thread_pool.fetch_shard_started.active</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.thread_pool.fetch_shard_started.active</collect>
    </ds>
    <ds>
        <dsName>thread_pool.fetch_shard_started.completed</dsName>
        <dsType>counter</dsType>
        <collect>$.nodes.*.thread_pool.fetch_shard_started.completed</collect>
    </ds>
    <ds>
        <dsName>thread_pool.fetch_shard_started.largest</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.thread_pool.fetch_shard_started.largest</collect>
    </ds>
    <ds>
        <dsName>thread_pool.fetch_shard_started.queue</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.thread_pool.fetch_shard_started.queue</collect>
    </ds>
    <ds>
        <dsName>thread_pool.fetch_shard_started.rejected</dsName>
        <dsType>counter</dsType>
        <collect>$.nodes.*.thread_pool.fetch_shard_started.rejected</collect>
    </ds>
    <ds>
        <dsName>thread_pool.fetch_shard_started.threads</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.thread_pool.fetch_shard_started.threads</collect>
    </ds>
    <ds>
        <dsName>thread_pool.fetch_shard_store.active</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.thread_pool.fetch_shard_store.active</collect>
    </ds>
    <ds>
        <dsName>thread_pool.fetch_shard_store.completed</dsName>
        <dsType>counter</dsType>
        <collect>$.nodes.*.thread_pool.fetch_shard_store.completed</collect>
    </ds>
    <ds>
        <dsName>thread_pool.fetch_shard_store.largest</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.thread_pool.fetch_shard_store.largest</collect>
    </ds>
    <ds>
        <dsName>thread_pool.fetch_shard_store.queue</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.thread_pool.fetch_shard_store.queue</collect>
    </ds>
    <ds>
        <dsName>thread_pool.fetch_shard_store.rejected</dsName>
        <dsType>counter</dsType>
        <collect>$.nodes.*.thread_pool.fetch_shard_store.rejected</collect>
    </ds>
    <ds>
        <dsName>thread_pool.fetch_shard_store.threads</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.thread_pool.fetch_shard_store.threads</collect>
    </ds>
    <ds>
        <dsName>thread_pool.flush.active</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.thread_pool.flush.active</collect>
    </ds>
    <ds>
        <dsName>thread_pool.flush.completed</dsName>
        <dsType>counter</dsType>
        <collect>$.nodes.*.thread_pool.flush.completed</collect>
    </ds>
    <ds>
        <dsName>thread_pool.flush.largest</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.thread_pool.flush.largest</collect>
    </ds>
    <ds>
        <dsName>thread_pool.flush.queue</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.thread_pool.flush.queue</collect>
    </ds>
    <ds>
        <dsName>thread_pool.flush.rejected</dsName>
        <dsType>counter</dsType>
        <collect>$.nodes.*.thread_pool.flush.rejected</collect>
    </ds>
    <ds>
        <dsName>thread_pool.flush.threads</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.thread_pool.flush.threads</collect>
    </ds>
    <ds>
        <dsName>thread_pool.force_merge.active</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.thread_pool.force_merge.active</collect>
    </ds>
    <ds>
        <dsName>thread_pool.force_merge.completed</dsName>
        <dsType>counter</dsType>
        <collect>$.nodes.*.thread_pool.force_merge.completed</collect>
    </ds>
    <ds>
        <dsName>thread_pool.force_merge.largest</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.thread_pool.force_merge.largest</collect>
    </ds>
    <ds>
        <dsName>thread_pool.force_merge.queue</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.thread_pool.force_merge.queue</collect>
    </ds>
    <ds>
        <dsName>thread_pool.force_merge.rejected</dsName>
        <dsType>counter</dsType>
        <collect>$.nodes.*.thread_pool.force_merge.rejected</collect>
    </ds>
    <ds>
        <dsName>thread_pool.force_merge.threads</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.thread_pool.force_merge.threads</collect>
    </ds>
    <ds>
        <dsName>thread_pool.generic.active</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.thread_pool.generic.active</collect>
    </ds>
    <ds>
        <dsName>thread_pool.generic.completed</dsName>
        <dsType>counter</dsType>
        <collect>$.nodes.*.thread_pool.generic.completed</collect>
    </ds>
    <ds>
        <dsName>thread_pool.generic.largest</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.thread_pool.generic.largest</collect>
    </ds>
    <ds>
        <dsName>thread_pool.generic.queue</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.thread_pool.generic.queue</collect>
    </ds>
    <ds>
        <dsName>thread_pool.generic.rejected</dsName>
        <dsType>counter</dsType>
        <collect>$.nodes.*.thread_pool.generic.rejected</collect>
    </ds>
    <ds>
        <dsName>thread_pool.generic.threads</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.thread_pool.generic.threads</collect>
    </ds>
    <ds>
        <dsName>thread_pool.get.active</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.thread_pool.get.active</collect>
    </ds>
    <ds>
        <dsName>thread_pool.get.completed</dsName>
        <dsType>counter</dsType>
        <collect>$.nodes.*.thread_pool.get.completed</collect>
    </ds>
    <ds>
        <dsName>thread_pool.get.largest</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.thread_pool.get.largest</collect>
    </ds>
    <ds>
        <dsName>thread_pool.get.queue</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.thread_pool.get.queue</collect>
    </ds>
    <ds>
        <dsName>thread_pool.get.rejected</dsName>
        <dsType>counter</dsType>
        <collect>$.nodes.*.thread_pool.get.rejected</collect>
    </ds>
    <ds>
        <dsName>thread_pool.get.threads</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.thread_pool.get.threads</collect>
    </ds>
    <ds>
        <dsName>thread_pool.index.active</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.thread_pool.index.active</collect>
    </ds>
    <ds>
        <dsName>thread_pool.index.completed</dsName>
        <dsType>counter</dsType>
        <collect>$.nodes.*.thread_pool.index.completed</collect>
    </ds>
    <ds>
        <dsName>thread_pool.index.largest</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.thread_pool.index.largest</collect>
    </ds>
    <ds>
        <dsName>thread_pool.index.queue</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.thread_pool.index.queue</collect>
    </ds>
    <ds>
        <dsName>thread_pool.index.rejected</dsName>
        <dsType>counter</dsType>
        <collect>$.nodes.*.thread_pool.index.rejected</collect>
    </ds>
    <ds>
        <dsName>thread_pool.index.threads</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.thread_pool.index.threads</collect>
    </ds>
    <ds>
        <dsName>thread_pool.listener.active</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.thread_pool.listener.active</collect>
    </ds>
    <ds>
        <dsName>thread_pool.listener.completed</dsName>
        <dsType>counter</dsType>
        <collect>$.nodes.*.thread_pool.listener.completed</collect>
    </ds>
    <ds>
        <dsName>thread_pool.listener.largest</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.thread_pool.listener.largest</collect>
    </ds>
    <ds>
        <dsName>thread_pool.listener.queue</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.thread_pool.listener.queue</collect>
    </ds>
    <ds>
        <dsName>thread_pool.listener.rejected</dsName>
        <dsType>counter</dsType>
        <collect>$.nodes.*.thread_pool.listener.rejected</collect>
    </ds>
    <ds>
        <dsName>thread_pool.listener.threads</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.thread_pool.listener.threads</collect>
    </ds>
    <ds>
        <dsName>thread_pool.management.active</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.thread_pool.management.active</collect>
    </ds>
    <ds>
        <dsName>thread_pool.management.completed</dsName>
        <dsType>counter</dsType>
        <collect>$.nodes.*.thread_pool.management.completed</collect>
    </ds>
    <ds>
        <dsName>thread_pool.management.largest</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.thread_pool.management.largest</collect>
    </ds>
    <ds>
        <dsName>thread_pool.management.queue</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.thread_pool.management.queue</collect>
    </ds>
    <ds>
        <dsName>thread_pool.management.rejected</dsName>
        <dsType>counter</dsType>
        <collect>$.nodes.*.thread_pool.management.rejected</collect>
    </ds>
    <ds>
        <dsName>thread_pool.management.threads</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.thread_pool.management.threads</collect>
    </ds>
    <ds>
        <dsName>thread_pool.ml_autodetect.active</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.thread_pool.ml_autodetect.active</collect>
    </ds>
    <ds>
        <dsName>thread_pool.ml_autodetect.completed</dsName>
        <dsType>counter</dsType>
        <collect>$.nodes.*.thread_pool.ml_autodetect.completed</collect>
    </ds>
    <ds>
        <dsName>thread_pool.ml_autodetect.largest</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.thread_pool.ml_autodetect.largest</collect>
    </ds>
    <ds>
        <dsName>thread_pool.ml_autodetect.queue</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.thread_pool.ml_autodetect.queue</collect>
    </ds>
    <ds>
        <dsName>thread_pool.ml_autodetect.rejected</dsName>
        <dsType>counter</dsType>
        <collect>$.nodes.*.thread_pool.ml_autodetect.rejected</collect>
    </ds>
    <ds>
        <dsName>thread_pool.ml_autodetect.threads</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.thread_pool.ml_autodetect.threads</collect>
    </ds>
    <ds>
        <dsName>thread_pool.ml_datafeed.active</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.thread_pool.ml_datafeed.active</collect>
    </ds>
    <ds>
        <dsName>thread_pool.ml_datafeed.completed</dsName>
        <dsType>counter</dsType>
        <collect>$.nodes.*.thread_pool.ml_datafeed.completed</collect>
    </ds>
    <ds>
        <dsName>thread_pool.ml_datafeed.largest</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.thread_pool.ml_datafeed.largest</collect>
    </ds>
    <ds>
        <dsName>thread_pool.ml_datafeed.queue</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.thread_pool.ml_datafeed.queue</collect>
    </ds>
    <ds>
        <dsName>thread_pool.ml_datafeed.rejected</dsName>
        <dsType>counter</dsType>
        <collect>$.nodes.*.thread_pool.ml_datafeed.rejected</collect>
    </ds>
    <ds>
        <dsName>thread_pool.ml_datafeed.threads</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.thread_pool.ml_datafeed.threads</collect>
    </ds>
    <ds>
        <dsName>thread_pool.ml_utility.active</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.thread_pool.ml_utility.active</collect>
    </ds>
    <ds>
        <dsName>thread_pool.ml_utility.completed</dsName>
        <dsType>counter</dsType>
        <collect>$.nodes.*.thread_pool.ml_utility.completed</collect>
    </ds>
    <ds>
        <dsName>thread_pool.ml_utility.largest</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.thread_pool.ml_utility.largest</collect>
    </ds>
    <ds>
        <dsName>thread_pool.ml_utility.queue</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.thread_pool.ml_utility.queue</collect>
    </ds>
    <ds>
        <dsName>thread_pool.ml_utility.rejected</dsName>
        <dsType>counter</dsType>
        <collect>$.nodes.*.thread_pool.ml_utility.rejected</collect>
    </ds>
    <ds>
        <dsName>thread_pool.ml_utility.threads</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.thread_pool.ml_utility.threads</collect>
    </ds>
    <ds>
        <dsName>thread_pool.refresh.active</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.thread_pool.refresh.active</collect>
    </ds>
    <ds>
        <dsName>thread_pool.refresh.completed</dsName>
        <dsType>counter</dsType>
        <collect>$.nodes.*.thread_pool.refresh.completed</collect>
    </ds>
    <ds>
        <dsName>thread_pool.refresh.largest</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.thread_pool.refresh.largest</collect>
    </ds>
    <ds>
        <dsName>thread_pool.refresh.queue</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.thread_pool.refresh.queue</collect>
    </ds>
    <ds>
        <dsName>thread_pool.refresh.rejected</dsName>
        <dsType>counter</dsType>
        <collect>$.nodes.*.thread_pool.refresh.rejected</collect>
    </ds>
    <ds>
        <dsName>thread_pool.refresh.threads</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.thread_pool.refresh.threads</collect>
    </ds>
    <ds>
        <dsName>thread_pool.rollup_indexing.active</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.thread_pool.rollup_indexing.active</collect>
    </ds>
    <ds>
        <dsName>thread_pool.rollup_indexing.completed</dsName>
        <dsType>counter</dsType>
        <collect>$.nodes.*.thread_pool.rollup_indexing.completed</collect>
    </ds>
    <ds>
        <dsName>thread_pool.rollup_indexing.largest</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.thread_pool.rollup_indexing.largest</collect>
    </ds>
    <ds>
        <dsName>thread_pool.rollup_indexing.queue</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.thread_pool.rollup_indexing.queue</collect>
    </ds>
    <ds>
        <dsName>thread_pool.rollup_indexing.rejected</dsName>
        <dsType>counter</dsType>
        <collect>$.nodes.*.thread_pool.rollup_indexing.rejected</collect>
    </ds>
    <ds>
        <dsName>thread_pool.rollup_indexing.threads</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.thread_pool.rollup_indexing.threads</collect>
    </ds>
    <ds>
        <dsName>thread_pool.search.active</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.thread_pool.search.active</collect>
    </ds>
    <ds>
        <dsName>thread_pool.search.completed</dsName>
        <dsType>counter</dsType>
        <collect>$.nodes.*.thread_pool.search.completed</collect>
    </ds>
    <ds>
        <dsName>thread_pool.search.largest</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.thread_pool.search.largest</collect>
    </ds>
    <ds>
        <dsName>thread_pool.search.queue</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.thread_pool.search.queue</collect>
    </ds>
    <ds>
        <dsName>thread_pool.search.rejected</dsName>
        <dsType>counter</dsType>
        <collect>$.nodes.*.thread_pool.search.rejected</collect>
    </ds>
    <ds>
        <dsName>thread_pool.search.threads</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.thread_pool.search.threads</collect>
    </ds>
    <ds>
        <dsName>thread_pool.search_throttled.active</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.thread_pool.search_throttled.active</collect>
    </ds>
    <ds>
        <dsName>thread_pool.search_throttled.completed</dsName>
        <dsType>counter</dsType>
        <collect>$.nodes.*.thread_pool.search_throttled.completed</collect>
    </ds>
    <ds>
        <dsName>thread_pool.search_throttled.largest</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.thread_pool.search_throttled.largest</collect>
    </ds>
    <ds>
        <dsName>thread_pool.search_throttled.queue</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.thread_pool.search_throttled.queue</collect>
    </ds>
    <ds>
        <dsName>thread_pool.search_throttled.rejected</dsName>
        <dsType>counter</dsType>
        <collect>$.nodes.*.thread_pool.search_throttled.rejected</collect>
    </ds>
    <ds>
        <dsName>thread_pool.search_throttled.threads</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.thread_pool.search_throttled.threads</collect>
    </ds>
    <ds>
        <dsName>thread_pool.snapshot.active</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.thread_pool.snapshot.active</collect>
    </ds>
    <ds>
        <dsName>thread_pool.snapshot.completed</dsName>
        <dsType>counter</dsType>
        <collect>$.nodes.*.thread_pool.snapshot.completed</collect>
    </ds>
    <ds>
        <dsName>thread_pool.snapshot.largest</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.thread_pool.snapshot.largest</collect>
    </ds>
    <ds>
        <dsName>thread_pool.snapshot.queue</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.thread_pool.snapshot.queue</collect>
    </ds>
    <ds>
        <dsName>thread_pool.snapshot.rejected</dsName>
        <dsType>counter</dsType>
        <collect>$.nodes.*.thread_pool.snapshot.rejected</collect>
    </ds>
    <ds>
        <dsName>thread_pool.snapshot.threads</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.thread_pool.snapshot.threads</collect>
    </ds>
    <ds>
        <dsName>thread_pool.warmer.active</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.thread_pool.warmer.active</collect>
    </ds>
    <ds>
        <dsName>thread_pool.warmer.completed</dsName>
        <dsType>counter</dsType>
        <collect>$.nodes.*.thread_pool.warmer.completed</collect>
    </ds>
    <ds>
        <dsName>thread_pool.warmer.largest</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.thread_pool.warmer.largest</collect>
    </ds>
    <ds>
        <dsName>thread_pool.warmer.queue</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.thread_pool.warmer.queue</collect>
    </ds>
    <ds>
        <dsName>thread_pool.warmer.rejected</dsName>
        <dsType>counter</dsType>
        <collect>$.nodes.*.thread_pool.warmer.rejected</collect>
    </ds>
    <ds>
        <dsName>thread_pool.warmer.threads</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.thread_pool.warmer.threads</collect>
    </ds>
    <ds>
        <dsName>thread_pool.watcher.active</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.thread_pool.watcher.active</collect>
    </ds>
    <ds>
        <dsName>thread_pool.watcher.completed</dsName>
        <dsType>counter</dsType>
        <collect>$.nodes.*.thread_pool.watcher.completed</collect>
    </ds>
    <ds>
        <dsName>thread_pool.watcher.largest</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.thread_pool.watcher.largest</collect>
    </ds>
    <ds>
        <dsName>thread_pool.watcher.queue</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.thread_pool.watcher.queue</collect>
    </ds>
    <ds>
        <dsName>thread_pool.watcher.rejected</dsName>
        <dsType>counter</dsType>
        <collect>$.nodes.*.thread_pool.watcher.rejected</collect>
    </ds>
    <ds>
        <dsName>thread_pool.watcher.threads</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.thread_pool.watcher.threads</collect>
    </ds>
    <ds>
        <dsName>thread_pool.write.active</dsName>
        <dsType>gauge</dsType>
        <collect>$.nodes.*.thread_pool.write.active</collect>
    </ds>
    <ds>
        <dsName>thread_pool.write.completed</dsName>
        <dsType>counter</dsType>
        <collect>$.nodes.*.thread_pool.write.completed</collect>
    </ds>

    <graphs>
        <name>ElasticNodeIndices</name>
        <name>ElasticNodeIndicesTime</name>
        <name>ElasticNodeDocCounts</name>
        <name>ElasticNodeMemory</name>
        <name>ElasticNodeTranslogSize</name>
        <name>ElasticNodeTranslogCount</name>
        <name>ElasticNodeFileDescriptors</name>
        <name>ElasticNodeThreadsCompleted</name>
        <name>ElasticNodeThreadsActive</name>
    </graphs>
</probedesc>
