version: 2.1
jobs:
    checkout:
        docker:
            - image: circleci/openjdk:8-jdk
        steps:
            - checkout
            - restore_cache:
                key: jrds-{{ checksum "pom.xml" }}
            - run: sudo apt install libsnmp-base
            - run: mkdir -p /home/circleci/.m2/repository
            - run: "mvn -B dependency:go-offline -DoutputFile=offline.log || true"
            - run: "[ -x /home/circleci/jfrog ] || (cd && curl -fL https://getcli.jfrog.io | sh)"
            - persist_to_workspace:
                root: /
                paths:
                    - home/circleci/.m2/repository
                    - home/circleci/jfrog
                    - home/circleci/project
                    - usr/share/snmp/mibs/
    build:
        docker:
            - image: circleci/openjdk:11-jdk
        steps:
            - attach_workspace:
                at: /tmp/ws
            - run:
                command: |
                    mv -n /tmp/ws/home/circleci/.m2 /home/circleci/
                    mv -n /tmp/ws/home/circleci/project/* /home/circleci/project/
                    mv -n /tmp/ws/home/circleci/project/.??* /home/circleci/project/
            - run:
                command: mvn -B clean compile install -DskipTests -Djdk.compile.home=/usr/lib/jvm/java-8-openjdk-amd64
                environment:
                    JAVA_HOME: /usr/lib/jvm/java-11-openjdk-amd64
            - persist_to_workspace:
                root: /
                paths:
                    - home/circleci/.m2/repository
                    - home/circleci/project
    testsj8:
        docker:
            - image: circleci/openjdk:8-jdk
        steps:
            - attach_workspace:
                at: /tmp/ws
            - run:
                command: |
                    mv -n /tmp/ws/home/circleci/.m2 /home/circleci/
                    mv -n /tmp/ws/home/circleci/project/* /home/circleci/project/
                    mv -n /tmp/ws/home/circleci/project/.??* /home/circleci/project/
                    sudo mkdir -p /usr/share/snmp/mibs/
                    sudo mv -n /tmp/ws/usr/share/snmp/mibs/* /usr/share/snmp/mibs/
            - run:
                command: |
                    #see https://stackoverflow.com/questions/53010200/maven-surefire-could-not-find-forkedbooter-class for disableClassPathURLCheck
                    mvn -B test -Dmaven.resources.skip=true -Dmaven.main.skip=true -DargLine="-Xmx2048m -Djdk.net.URLClassPath.disableClassPathURLCheck=true"
                environment:
                    JAVA_HOME: /usr/lib/jvm/java-8-openjdk-amd64
            - store_test_results:
                path: target/surefire-reports
            #don't persist_to_workspace, can't be done in parallel with testsj11
    publish:
        docker:
            - image: circleci/openjdk:11-jdk
        steps:
            - attach_workspace:
                at: /tmp/ws
            - run:
                command: |
                    mv -n /tmp/ws/home/circleci/.m2 /home/circleci/
                    mv -n /tmp/ws/home/circleci/jfrog /home/circleci/jfrog
                    mv -n /tmp/ws/home/circleci/project/* /home/circleci/project/
                    mv -n /tmp/ws/home/circleci/project/.??* /home/circleci/project/
            - run:
                command: |
                     mvn -B deploy site -Dmaven.resources.skip=true -Dmaven.test.skip=true -Dmaven.main.skip=true -DaltDeploymentRepository=local::default::file:target/deploy
                environment:
                    JAVA_HOME: /usr/lib/jvm/java-11-openjdk-amd64
            - run:
                command: |
                    VERSION=$(mvn -B help:evaluate -Dexpression=project.version -q -DforceStdout)
                    GROUPPATH=$(mvn -B help:evaluate -Dexpression=project.groupId -q -DforceStdout | sed 's#\.#/#g')
                    for a in target/deploy/$GROUPPATH/* ; do \
                        ( \
                            echo "$a"
                            cd "$a" && \
                            echo "$BINTRAY_REPO/$ARTEFACT/$VERSION $GROUPPATH/$ARTEFACT/$VERSION/" && \
                            /home/circleci/jfrog bt u --user $BINTRAY_USER --key $BINTRAY_KEY '*' "$BINTRAY_REPO/$a/$VERSION" "$GROUPPATH/$a/$VERSION/" \
                        ) \
                    done
                environment:
                    JAVA_HOME: /usr/lib/jvm/java-11-openjdk-amd64
            - persist_to_workspace:
                root: /
                paths:
                    - home/circleci/.m2/repository
    savecache:
        docker:
            - image: circleci/openjdk:11-jdk
        steps:
            - attach_workspace:
                at: /tmp/ws
            - run:
                command: |
                    mv /tmp/ws/home/circleci/project/pom.xml /home/circleci/project/
                    mv /tmp/ws/home/circleci/.m2 /home/circleci/
            - save_cache:
                paths:
                    - /home/circleci/.m2/repository
                key: jrds-{{ checksum "pom.xml" }}
            
workflows:
  version: 2.1
  build_and_test:
    jobs:
      - checkout
      - build:
          requires:
              - checkout
      - testsj8:
          requires:
              - build
      - publish:
          requires:
              - testsj8
      - savecache:
          requires:
              - publish
